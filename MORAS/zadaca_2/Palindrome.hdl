// Palindrome.hdl
// Checks if a 16-bit input is a palindrome

CHIP Palindrome {
    IN in[16];   // 16-bit input
    OUT out;     // 1-bit output: 1 if palindrome, 0 otherwise

    PARTS:
    // Compare corresponding bits using Xor
    Xor(a=in[0], b=in[15], out=xor0);
    Xor(a=in[1], b=in[14], out=xor1);
    Xor(a=in[2], b=in[13], out=xor2);
    Xor(a=in[3], b=in[12], out=xor3);
    Xor(a=in[4], b=in[11], out=xor4);
    Xor(a=in[5], b=in[10], out=xor5);
    Xor(a=in[6], b=in[9], out=xor6);
    Xor(a=in[7], b=in[8], out=xor7);

    // If any Xor is 1, then the number is not a palindrome
    Or(a=xor0, b=xor1, out=or01);
    Or(a=xor2, b=xor3, out=or23);
    Or(a=xor4, b=xor5, out=or45);
    Or(a=xor6, b=xor7, out=or67);

    Or(a=or01, b=or23, out=or0123);
    Or(a=or45, b=or67, out=or4567);

    Or(a=or0123, b=or4567, out=notPalindrome);

    // Final output: if notPalindrome is 0, then it is a palindrome
    Not(in=notPalindrome, out=out);
}
