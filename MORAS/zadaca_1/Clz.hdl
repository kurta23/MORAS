CHIP Clz{
	IN in[16];
	OUT out[16];
	PARTS:

Inc16(in = false, out = i1);        
Inc16(in = i1, out = i2);
Inc16(in = i2, out = i3);
Inc16(in = i3, out = i4);
Inc16(in = i4, out = i5);
Inc16(in = i5, out = i6);
Inc16(in = i6, out = i7);
Inc16(in = i7, out = i8);             // brojevi od 1 do 16
Inc16(in = i8, out = i9);
Inc16(in = i9, out = i10);
Inc16(in = i10, out = i11);
Inc16(in = i11, out = i12);
Inc16(in = i12, out = i13);
Inc16(in = i13, out = i14);
Inc16(in = i14, out = i15); 
Inc16(in = i15, out = i16);

Mux16(a = i16, b = i15, sel = in[0], out = out1);   
Mux16(a = out1, b = i14, sel = in[1], out = out2);    
Mux16(a = out2, b = i13, sel = in[2], out = out3);
Mux16(a = out3, b = i12, sel = in[3], out = out4);
Mux16(a = out4, b = i11, sel = in[4], out = out5);     
Mux16(a = out5, b = i10, sel = in[5], out = out6);       
Mux16(a = out6, b = i9, sel = in[6], out = out7);
Mux16(a = out7, b = i8, sel = in[7], out = out8);        // bira izmedu prethodnog najveceg broja i broja 8 s obzirom je li znamenka 8 jedan ili nije
Mux16(a = out8, b = i7, sel = in[8], out = out9);
Mux16(a = out9, b = i6, sel = in[9], out = out10);
Mux16(a = out10, b = i5, sel = in[10], out = out11);
Mux16(a = out11, b = i4, sel = in[11], out = out12);
Mux16(a = out12, b = i3, sel = in[12], out = out13);
Mux16(a = out13, b = i2, sel = in[13], out = out14);
Mux16(a = out14, b = i1, sel = in[14], out = out15);
Mux16(a = out15, b = false, sel = in[15], out = out);
}
